*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:TCP - [0:0]
:UDP - [0:0]

# standard rules
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable

# custom port accepting rules
{% set _ = group_names.append('all') %}
{% for group in group_names %}
{%    if rules[group] is defined %}
{%        for rule in rules[group] %}
-A {{ rules[group][rule]['protocol']|upper }} -s {{ rules[group][rule]['source']|default(default_source) }} -d {{ rules[group][rule]['dest']|default(default_dest) }} -p {{ rules[group][rule]['protocol']|lower }} -m conntrack --ctstate NEW,RELATED,ESTABLISHED -m {{ rules[group][rule]['protocol']|lower }} --dport {{ rules[group][rule]['port'] }} -j ACCEPT
{%        endfor %}
{%     endif %}
{% endfor %}

# rules for NFS shares
{% if nfs_exports is defined and 'nfsserver' in group_names %}
{%    set all_ips = [] %}
{%    for share in nfs_exports %}
{%        if share['iprange'] is defined %}
{%            set export_ip=share['iprange'] %}
{%        else %}
{%            set export_ip=internal_subnet %}
{%        endif %}
{%        if share['path'] is defined and export_ip not in all_ips %}
{{            "-A TCP -s {0} -p tcp -m conntrack --ctstate NEW,RELATED,ESTABLISHED -m tcp --dport 2049 -j ACCEPT".format(export_ip)  }}
{{            "-A UDP -s {0} -p udp -m conntrack --ctstate NEW,RELATED,ESTABLISHED -m udp --dport 111 -j ACCEPT".format(export_ip)  }}
{{            "-A UDP -s {0} -p udp -m conntrack --ctstate NEW,RELATED,ESTABLISHED -m udp --dport 8749 -j ACCEPT".format(export_ip)  }}
{%            set _ = all_ips.append(export_ip) %}
{%        endif %}
{%    endfor %}
{% endif %}

COMMIT
